@startuml

class Agent{
  +int x;
  +int y;
  +int t;
  +boolean alive;
  +boolean win;
  +double points;
  +State hasRock;
  +enum Level01GoalState;
  +enum Level02GoalState;

  +void run();
  +Percept percept();
  +Percept move();
  +Percept shoot();
  +Percept grab();
  +Direction chooseRandomDirection();
}

class Cave{
  +int maxCordinateVertical;
  +int minCordinateVertical;
  +int maxCordinateHorizontal;
  +int minCordinateHorizontal;
  +int maxKnowHorizonVertical;
  +int minKnowHorizonVertical;
  +int maxKnowHorizonHorizontal;
  +int minxKnowHorizonhorizontal;
  +List<Doungeon> listOfDungeon;
  Doungeon[][] map;

  +TravelPlan findNearestUnvisitedDungeon();
  +TravelPlan findNearestMaybePitDungeon();
}

class Direction{
  +enum NORTH;
  +enum SOUTH;
  +enum EAST;
  +enum WEST;
}

class Doungeon{
  +int x;
  +int y;
  +State pit;
  +State wumpus;
  +State gold;
  +boolean visited;
  +int id;
  +boolean valid;
  +State perceptBreeze;
  +State perceptGlitter;
  +State perceptStench;
  +State rockOnTheGround;

  +boolean safe();
}

class Move{
  +Direction direction;
  +int fromX;
  +int fromY;
  +int toX;
  +int toY;
  +int fromT;
  +int toT;
}

class Percept{
  +String state;
  +boolean stench;
  +boolean breeze;
  +boolean scream;
  +boolean glitter;
  +boolean bump;
  +boolean soundOfRockFallingOnTheGround
  +boolean rockOnTheGround;
  +int t;
  double points;
}

class Pit{
  +int x;
  +int y;
}

class Shoot{
  +Direction direction;
  +int fromX;
  +int fromY;
  +int toX;
  +int toY;
  +int fromT;
  +int toT;
}

class ThrowRock{
  +Direction direction;
  +int fromX;
  +int fromY;
  +int toX;
  +int toY;
  +int fromT;
  +int toT;
}

class State{
  +enum UNKNOWN;
  +enum MAYBE;
  +enum NO;
  +enum YES;
  +enum DEAD;
}

class TravelPlan{
  +List<Doungeon> path;
  +boolean isEmpty();
}


Agent --> Move
Agent --> Shoot
Agent --> ThrowRock
Agent --> Percept
Agent --> TravelPlan
Move --> Direction : Use
Shoot --> Direction : Use
ThrowRock --> Direction : Use
Doungeon --* State
Doungeon --* Cave
Doungeon --* Pit


@enduml
